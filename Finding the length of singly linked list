/* Following is the program demonstrating how to find the length of linked list */

#include <stdio.h>
#include <stdlib.h>

/* First step is creation of a structure (struct node) which would contain the data types for a cell of linked list*/

struct node
{
	int data;
	struct node *next; // "next" is a pointer which will point to an address of type struct node, i.e:- pointing to another node
};

struct node* createNode(int data)
{
	struct node *temp = (struct node*)malloc(sizeof(struct node));
	
	temp->data = data;
	
	temp->next = NULL;
	
	return temp;
}

int length(struct node *head)
{
	struct node *temp = head;
	int count =0;
	
	while(temp!=NULL)
	{
		count++;
		temp = temp->next;
		
	}
	
	return count;
}
int count1=0;
int recLen(struct node *temp)  // finding length by recursion 
{
	
	if(temp!=NULL)
	{
		count1++;
		recLen(temp->next);
	}
	
	return count1;
	
}

int main()
{
	struct node *head = (struct node*)malloc(sizeof(struct node));
	
	head->data = 10;
	
	head->next = createNode(20);
	head->next->next= createNode(30);
	head->next->next->next= createNode(40);
	head->next->next->next->next= createNode(25);
	head->next->next->next->next->next= createNode(50);
	
	int len = length(head);
	
	printf("lenght = %d\n", len);
	
	int rlen;
	rlen = recLen(head);
	
	printf("%d", rlen);
	return 0;
}
