/* Following is the program demonstrating how to delete a node having a certain key */

#include <stdio.h>
#include <stdlib.h>

/* First step is creation of a structure (struct node) which would contain the data types for a cell of linked list*/

struct node
{
	int data;
	struct node *next; // "next" is a pointer which will point to an address of type struct node, i.e:- pointing to another node
};

struct node* createNode(int data)
{
	struct node *temp = (struct node*)malloc(sizeof(struct node));
	
	temp->data = data;
	
	temp->next = NULL;
	
	return temp;
}


void deletenode(struct node **head_ref , int data)
{
	struct node *temp = (*head_ref);
	struct node *prev = NULL;
	
	while(temp->data!=data)
	{
		prev = temp;
		temp = temp->next;
	}
	
	prev->next = temp->next;
	free(temp);
		
}

int main()
{
	struct node *head = (struct node*)malloc(sizeof(struct node));
	
	head->data = 10;
	
	head->next = createNode(20);
	head->next->next= createNode(30);
	head->next->next->next= createNode(40);
	head->next->next->next->next= createNode(25);
	head->next->next->next->next->next= createNode(50);
	
	
	struct node* curr = head;
	
	while(curr!=NULL)
	{
		printf("%d ", curr->data); // printing all the node data using loop
		
		curr = curr->next;
	}
	
	printf("\n");
	
	deletenode(&head , 40);
	deletenode(&head , 25);
	
	struct node* curr2 = head;
	
	while(curr2!=NULL)
	{
		printf("%d ", curr2->data); // printing all the node data using loop
		
		curr2 = curr2->next;
	}
	return 0;
}


